{"version":3,"sources":["components/Buscador.js","components/Imagen.js","components/Paginacion.js","components/Resultado.js","App.js","serviceWorker.js","index.js"],"names":["Buscador","BusquedaRef","React","createRef","obtenerDatos","e","preventDefault","termino","_this","current","value","props","datosBusqueda","react_default","a","createElement","onSubmit","this","className","ref","type","placeholder","id","Component","Imagen","_props$imagen","imagen","largeImageURL","likes","previewURL","tags","views","src","alt","href","target","Paginacion","onClick","paginaAnterior","paginaSiguiente","Resultado","mostrarImagenes","imagenes","length","Fragment","components_Paginacion","map","components_Imagen","key","App","state","pagina","scroll","document","querySelector","scrollIntoView","setState","consultarApi","url","concat","fetch","then","respuesta","json","resultado","hits","components_Buscador","components_Resultado","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d37f238d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Buscador extends Component {\r\n\r\n    BusquedaRef = React.createRef();\r\n    obtenerDatos = (e) => {\r\n        e.preventDefault();\r\n        //toma el valor del input\r\n        const termino = this.BusquedaRef.current.value;\r\n\r\n        // envia al componente principal\r\n        this.props.datosBusqueda(termino);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.obtenerDatos}>\r\n                <div className=\"row p-3\">\r\n                    <div className=\"form-group col-md-8 center\">\r\n                        <input ref={this.BusquedaRef} type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Busca tu Imagen...\" />\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                        <input type=\"submit\" className=\"btn btn-lg btn-danger btn-block\" value=\"Buscar\" id=\"buscador\"/>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Buscador;","import React from 'react';\r\n\r\nconst Imagen = (props) => {\r\n\r\n    const {largeImageURL,likes,previewURL,tags,views} = props.imagen;\r\n\r\n    return (\r\n        <div className=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\">\r\n            <div className=\"card\">\r\n                <img src={previewURL} alt={tags} className=\"card-img-top\" />\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text\">{likes} Me Gusta</p>\r\n                    <p className=\"card-text\">{views} Vistas</p>\r\n                    <a href={largeImageURL} target=\"_blank\" className=\"btn btn-primary btn-block\">Ver Imagen</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Imagen;","import React from 'react';\r\n\r\nconst Paginacion = props => {\r\n    return(\r\n        <div className=\"py-5\">\r\n            <button onClick={props.paginaAnterior} type=\"button\" className=\"btn btn-info mr-4\">&larr; Anterior</button>\r\n            <button onClick={props.paginaSiguiente} type=\"button\" className=\"btn btn-info\">Siguiente &rarr;</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginacion;","import React, {Component} from 'react';\r\nimport Imagen from './Imagen';\r\nimport Paginacion from './Paginacion';\r\n\r\nclass Resultado extends Component {\r\n    mostrarImagenes = () => {\r\n        const imagenes = this.props.imagenes;\r\n\r\n        if(imagenes.length === 0) return null;\r\n        // console.log(imagenes);\r\n        return(\r\n            <React.Fragment>\r\n                <Paginacion \r\n                    paginaAnterior = {this.props.paginaAnterior}\r\n                    paginaSiguiente = {this.props.paginaSiguiente}\r\n                />\r\n                <div className=\"col-12 row\">\r\n                    {imagenes.map(imagen => (\r\n                            <Imagen key={imagen.id} imagen={imagen} />\r\n                        )\r\n                    )}\r\n                </div>\r\n                <Paginacion \r\n                    paginaAnterior = {this.props.paginaAnterior}\r\n                    paginaSiguiente = {this.props.paginaSiguiente}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                {this.mostrarImagenes()}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Resultado;","import React,{Component} from 'react';\nimport Buscador from './components/Buscador';\nimport Resultado from './components/Resultado';\n\nclass App extends Component {\n\n  state = {\n    termino: '',\n    imagenes: [],\n    pagina: ''\n  }\n\n  scroll = () => {\n    const elemento = document.querySelector('.jumbotrom');\n    elemento.scrollIntoView('smooth','end');\n  }\n\n  paginaAnterior = () => {\n    // console.log('Anterior');\n    // Leer el state de la pagina actual\n    let pagina = this.state.pagina;\n\n    // Si la pagina es 1, ya no ir hacia atras\n    if(pagina === 1) return null;\n\n    //Restar uno a la pagina actual\n    pagina -= 1;\n\n    //agregar el cambio al state\n    this.setState({\n      pagina\n    }, () =>{\n      this.consultarApi();\n      this.scroll();\n    });\n\n    // console.log(pagina);\n  }\n  paginaSiguiente = () => {\n    // console.log('Siguiente...');\n    // Leer el state de la pagina actual\n    let pagina = this.state.pagina;\n\n    //sumar uno a la pagina actual\n    pagina += 1;\n    //agregar el cambio al state\n    this.setState({\n      pagina\n    }, () => {\n      this.consultarApi();\n      this.scroll();\n    });\n\n    // console.log(pagina);\n  }\n\n  consultarApi = () => {\n    const termino = this.state.termino;\n    const pagina = this.state.pagina;\n    const url = `https://pixabay.com/api/?key=13166503-f95feba3af70f876e20122795&q=${termino}&per_page=30&page=${pagina}`;\n    // console.log(url);\n    fetch(url)\n      .then(respuesta => respuesta.json())\n      .then(resultado => this.setState({imagenes: resultado.hits}))\n\n  }\n\n  datosBusqueda = (termino) => {\n    this.setState({\n      termino : termino,\n      pagina : 1\n    }, () => {\n      this.consultarApi();\n    })\n  }\n  render(){\n    return (\n      <div className=\"app container\">\n        <div className=\"jumbotrom\">\n          <h2 className=\"text-center\">Galeria</h2>\n          <Buscador \n            datosBusqueda={this.datosBusqueda}\n          />\n        </div>\n        <div className=\"row justify-content-center\">\n          <Resultado \n            imagenes = {this.state.imagenes}\n            paginaAnterior = {this.paginaAnterior}\n            paginaSiguiente = {this.paginaSiguiente}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}